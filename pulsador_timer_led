#include <stdio.h>
#include <stdbool.h>
#include <unistd.h>
#include "freertos/freeRTOS.h"
#include "freertos/task.h"
#include "driver/gpio.h"
#include "esp_timer.h"

#define pulsador 15
#define led 4

enum estados
{
	suelto,
	pulsando,
	apretado,
	soltando,
} ;

typedef enum estados estado ;

struct fsm
{
	estado estado_actual;
} ;

struct fsm fsm = { .estado_actual = suelto};

bool level = 0 ;
uint32_t tiempo;


bool leer_pin (void)
{
	return (gpio_get_level (15));
}

float leer_tiempo (void)
{
	tiempo = esp_timer_get_time ()/ 1000 ;

	return tiempo;
}

void periodo (float ttotal)
{

		printf ("ttotal dentro es: %f\n", ttotal); //muestreo para verificar en monitor
		gpio_set_level (4, level);
		level =!level ;
		vTaskDelay(pdMS_TO_TICKS(ttotal));
}


void app_main(void)
{
	bool entrada;
	float t_on= 0, t_off = 0;
	float ttotal = 1000;

	gpio_set_direction (15, GPIO_MODE_INPUT);
	gpio_set_direction (4, GPIO_MODE_OUTPUT);
	gpio_set_pull_mode (15, GPIO_PULLDOWN_ONLY);
	gpio_set_level 		(4, 0);

    while (true)
    {

    	if (t_on==0)
    		periodo (ttotal);

    	entrada = leer_pin ();

    	switch (fsm.estado_actual)
    	{
    		case suelto:
    			if (entrada == 1)
    				{
    				fsm.estado_actual = pulsando;
    				t_on = esp_timer_get_time () /100;
    				t_off = 0;
    				}
    			break;

    		case pulsando:
    			if (entrada == 0)
    				{
    				fsm.estado_actual = suelto;
    				}
    			else
    				fsm.estado_actual = apretado;

    			break;

    		case apretado:
    			if (entrada == 0)
    				{
    				fsm.estado_actual = soltando;
    				}
    			break;

    		case soltando:
    			if (entrada == 0)
    			{
    				fsm.estado_actual = suelto;
    				t_off = esp_timer_get_time () /100;
    			}
    			else
    				fsm.estado_actual = apretado;

    			break;
    	}

    	if (t_on>0 && t_off>0)
    	{
    	ttotal = t_off - t_on ;
    	//printf ("t_on es: %0.2f\n",t_on);
    	//printf ("t_off es: %0.2f\n", t_off);
    	//printf ("ttotal es: %0.2f\n", ttotal); muestreo para verificar datos

    	periodo (ttotal/ 10);
    	}

    	vTaskDelay(pdMS_TO_TICKS(9));


    }
}
    	

